version: '3.3'
services:
  mongo:
    container_name: mongo
    image: mongo:latest
    volumes:
    - ./data:/data/db
    env_file:
      - config/mongo.env
  server:
    container_name: server
    build: ./src/docker
    env_file:
      - config/share-fridge.env
    volumes:
      - /var/share-fridge:/var/share-fridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.rule=Host(`share-fridge.net`)"
      - "traefik.http.routers.server.entryPoints=web-secure"
      - "traefik.http.services.server.loadbalancer.server.port=8080"
  reverse-proxy:
    image: traefik:v2.4
    command: --api.insecure=true --providers.docker
    env_file:
      - ./config/traefik/traefik.env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/traefik:/etc/traefik:/etc/traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.reverse-proxy.entryPoints=web-secure"
      - "traefik.http.routers.reverse-proxy.rule=Host(`traefik.share-fridge.net)"
      - "traefik.http.routers.reverse-proxy.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_USERNAME}:${TRAEFIK_PASSWORD}"
      - "traefik.http.routers.reverse-proxy.service=api@internal"
      - "traefik.http.services.reverse-proxy.loadbalancer.server.port=8080" # Dummy port so Docker doesn't complain
